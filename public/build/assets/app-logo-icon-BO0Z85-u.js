import{j as p}from"./app-CAPJ0lxF.js";let d={};const m=e=>{if(!e||!e.query&&!e.mergeQuery)return"";const r=e.query??e.mergeQuery,l=e.mergeQuery!==void 0,h=t=>t===!0?"1":t===!1?"0":t.toString(),n=new URLSearchParams(l&&typeof window<"u"?window.location.search:"");for(const t in r){if(r[t]===void 0||r[t]===null){n.delete(t);continue}if(Array.isArray(r[t]))n.has(`${t}[]`)&&n.delete(`${t}[]`),r[t].forEach(s=>{n.append(`${t}[]`,s.toString())});else if(typeof r[t]=="object"){n.forEach((s,f)=>{f.startsWith(`${t}[`)&&n.delete(f)});for(const s in r[t])typeof r[t][s]>"u"||["string","number","boolean"].includes(typeof r[t][s])&&n.set(`${t}[${s}]`,h(r[t][s]))}else n.set(t,h(r[t]))}const c=n.toString();return c.length>0?`?${c}`:""},Q=e=>{const r={...e??{}};for(const l in d)r[l]===void 0&&d[l]!==void 0&&(r[l]=d[l]);return r},o=e=>({url:o.url(e),method:"get"});o.definition={methods:["get","head"],url:"/"};o.url=e=>o.definition.url+m(e);o.get=e=>({url:o.url(e),method:"get"});o.head=e=>({url:o.url(e),method:"head"});const a=e=>({action:o.url(e),method:"get"});a.get=e=>({action:o.url(e),method:"get"});a.head=e=>({action:o.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});o.form=a;const u=e=>({url:u.url(e),method:"get"});u.definition={methods:["get","head"],url:"/login"};u.url=e=>u.definition.url+m(e);u.get=e=>({url:u.url(e),method:"get"});u.head=e=>({url:u.url(e),method:"head"});const g=e=>({action:u.url(e),method:"get"});g.get=e=>({action:u.url(e),method:"get"});g.head=e=>({action:u.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});u.form=g;const i=e=>({url:i.url(e),method:"post"});i.definition={methods:["post"],url:"/logout"};i.url=e=>i.definition.url+m(e);i.post=e=>({url:i.url(e),method:"post"});const y=e=>({action:i.url(e),method:"post"});y.post=e=>({action:i.url(e),method:"post"});i.form=y;function A({className:e,alt:r="App Logo",...l}){return p.jsx("img",{src:"/logo.svg",alt:r,className:e,...l})}export{A,Q as a,i as b,o as h,u as l,m as q};
